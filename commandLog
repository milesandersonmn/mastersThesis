##Create BED file with 150 bp flanking regions from known positions of SI loci on the reference (150 bp flanking region may capture potential frameshift mutations)
awk -v OFS="\t" '{$2=$2-150;$3=$3+150; print $0;}' selfincompatibility_genes1.bed > selfincompatibility_genes_150flanking.bed

##Filter SI genes from BED file with 150 bp flanking regions
bcftools view -I -O z Schil_capture_variants_Chr1-12.vcf.gz -R selfincompatibility_genes_150flanking.bed -o Schil_capture_variants_Chr1-12.SIgenes.vcf.gz

##grep individual sample names using accession names from samples in VCF
zcat Schil_capture_variants_Chr1-12.SIgenes.vcf.gz | grep -o 'LA2981A_[[:alnum:]]*[[:digit:]]*'

##awk command to print region columns to use in extracting all accessions in a given region
awk 'BEGIN {FS="\t"} ; {if (NR!=1) {print $5}}' selected_pops.txt | sort | uniq

##Extract region 2 column, print all accessions with matching locations to use in VCF population subsetting

IFS=$'\n';
for i in `awk 'BEGIN {FS="\t"} ; {if (NR!=1) {print $5}}' selected_pops.txt | sort | uniq`;do;
region=`echo "$i"`;
fileName=$(echo $region | tr -d ' ' | tr -d \\r );
awk -v region="$region" -F '\t' '$5~region {print $1}' selected_pops.txt > ${fileName}_accessions.txt;
done
unset IFS

##Extract individual sample names from VCF using accession names to subset VCF by subpopulations

while read line;do
region=`basename -s _accessions.txt $line`
for accession in `cat $line`;do 
bcftools view -h Schil_capture_variants_Chr1-12.SIgenes.vcf.gz | grep -o "${accession}_[[:alnum:]]*[[:digit:]]*" \
>> ${region}_Samples.txt;
done
done < regionFileNames.txt

##Subset VCF by region
while read line;do
region=`basename -s _Samples.txt $line`
bcftools view -O z --samples-file populations/$line VCFs/Schil_capture_variants_Chr1-12.SIgenes.vcf.gz -o VCFs/${region}_Schil_capture_variants_Chr1-12.SIgenes.vcf.gz
done < populations/sampleFileNames.txt
