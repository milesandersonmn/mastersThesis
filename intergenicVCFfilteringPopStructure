##PLINK LD pruning rÂ² of 0.5 for VCFs generated from all purpose filtering

plink --vcf intergenicSNPs.noSingletons.noOutgroup.vcf --indep-pairwise 50 5 0.5 --const-fid --allow-extra-chr \
--recode vcf --out pruned.intergenicSNPs.noSingletons.noOutgroup --set-missing-var-ids @:#

## Edit VCF header to simplify sample names for visualization

bcftools query -l pruned.intergenicSNPs.noSingletons.noOutgroup.vcf > sampleIDlist.txt

#Edit txt in VIM

%s/\(0_\)\(.*\)/\1\2\t\2/

#Reheader in VCF

bcftools reheader -s sampleIDlist.txt -o pruned.intergenicSNPs.noSingletons.noOutgroup.rename.vcf pruned.intergenicSNPs.noSingletons.noOutgroup.vcf

##Define populations for PGDSpider

sed -r 's/(.*)_.*/&\t\1/' allSampleNames.txt > populationDefinitions.txt  

##BayeScan (convert PLINK VCF to BayeScan format using PGDSpider)

bayescan_2.1 bayescanIntergenicSNPs_noOutgroup.txt -o selectionTesting -threads 40

##Find outliers with plot_bayescan.R

results <- plot_bayescan("selectionTestingIntergenic_fst.txt", FDR=0.05)

write(results$outliers, file = "intergenic_outlier_indices.txt", ncolumns = 1, sep = "\t")

##Create list of SNP IDs

bcftools query -f '%ID\n' ../VCFs/pruned.intergenicSNPs.noSingletons.noOutgroup.rename.vcf > intergenicSNPIDs.txt

##Match variant IDs with index number from BayeScan

awk '{ print NR, $1 }' intergenicSNPIDs.txt > intergenicSNPIDs_indexed.txt

##awk script to print only outlier loci

for i in `cat intergenic_outlier_indices.txt`; do awk -v var=$i '{if ($1 == var) print $2;}' intergenicSNPIDs_indexed.txt ; done > intergenicOutlier_IDs.txt

##Filter to exclude outlier loci from VCF

bcftools view --exclude ID==@intergenicOutlier_IDs.txt ../VCFs/pruned.intergenicSNPs.noOutgroup.rename.vcf > intergenicSNPS.noOutgroup.rename.noOutliers.vcf
